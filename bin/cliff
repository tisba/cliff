#!/usr/bin/env ruby

require "rubygems"
require "cliff"
require "trollop"

# Define some command-line options
opts = Trollop.options do
  version "v0.2 (by) Sebastian Cohnen, 2010"
  banner <<-BANNER
Cliff is a CLI-Client for friendpaste.com. It's not yet finished but
should work. Currently only getting existing and creating new snippets
is supported. Updates, Diffs, Versioning, etc. will soon follow!

http://github.com/tisba/cliff

Example usage:
  # echo "Hello world!" | cliff
  # cliff < file.txt
  # cliff someexistingfile.txt
  # cliff SOME_SNIPPET_ID > output.txt

Note:
When creating a new snippet, the complete URL is copied to your
clipboard for direct usage on IRC and co.

Cliff is heavily inspired by the CLI-Clients for gist :-)

Options:
BANNER
  opt :list_languages, "List all available languages for syntax highlighting on friendpaste", :default => false
  opt :refresh, "Refresh available languages", :default => false
  opt :language, "Specify the language for highlighting purposes on fp", :default => "text"

  if ARGV.empty? && STDIN.tty?
    educate
    exit
  end
end

# List all available languages
if opts[:list_languages]
  Cliff.languages.each { |lang| puts lang.join(': ') }
  exit
end

# Refresh available languages
if opts[:refresh]
  Cliff::Helpers.refresh_languages_cache
  exit
end

# Let's rock!

# Let's see if our first param could be an existing file...
if ARGV.first and File.exists?(ARGV.first)
  input = File.read(ARGV.first)
  opts = {"language" => ARGV[1]} if Cliff::Helpers.is_language?(ARGV[1])
  puts Cliff.create(input, opts).snippet_id
  exit
end

if STDIN.tty?
  puts Cliff.get(ARGV.first).snippet
else
  opts = {"language" => ARGV.first} if Cliff::Helpers.is_language?(ARGV.first)
  puts Cliff.create(STDIN.read, opts).snippet_id
end